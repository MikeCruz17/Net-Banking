//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using Entidades;
    
    public partial class BANKINGEntities : DbContext
    {
        public BANKINGEntities()
            : base("name=BANKINGEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CUENTAS> CUENTAS { get; set; }
        public virtual DbSet<PAGOS> PAGOS { get; set; }
        public virtual DbSet<PRESTAMO> PRESTAMO { get; set; }
        public virtual DbSet<ROL> ROL { get; set; }
        public virtual DbSet<TARJETAS> TARJETAS { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
        public virtual DbSet<Reporte_Prestamos> Reporte_Prestamos { get; set; }
        public virtual DbSet<Reporte_Tarjetas> Reporte_Tarjetas { get; set; }
        public virtual DbSet<Reporte_Usuarios> Reporte_Usuarios { get; set; }
        public virtual DbSet<ReportesCuentas> ReportesCuentas { get; set; }
        public virtual DbSet<PAGO_PRESTAMO> PAGO_PRESTAMO { get; set; }
        public virtual DbSet<TRANSACCION_TARJETA> TRANSACCION_TARJETA { get; set; }
        public virtual DbSet<PAGO_TARJETA> PAGO_TARJETA { get; set; }
        public virtual DbSet<TRANSACCION> TRANSACCION { get; set; }
    
        public virtual int PAGO_DE_TARJETA(Nullable<int> mONTO_DEUDA, Nullable<int> nUMERO_TARJETA, Nullable<int> cUENTA_DESCONTAR)
        {
            var mONTO_DEUDAParameter = mONTO_DEUDA.HasValue ?
                new ObjectParameter("MONTO_DEUDA", mONTO_DEUDA) :
                new ObjectParameter("MONTO_DEUDA", typeof(int));
    
            var nUMERO_TARJETAParameter = nUMERO_TARJETA.HasValue ?
                new ObjectParameter("NUMERO_TARJETA", nUMERO_TARJETA) :
                new ObjectParameter("NUMERO_TARJETA", typeof(int));
    
            var cUENTA_DESCONTARParameter = cUENTA_DESCONTAR.HasValue ?
                new ObjectParameter("CUENTA_DESCONTAR", cUENTA_DESCONTAR) :
                new ObjectParameter("CUENTA_DESCONTAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PAGO_DE_TARJETA", mONTO_DEUDAParameter, nUMERO_TARJETAParameter, cUENTA_DESCONTARParameter);
        }
    
        public virtual int PAGOS_Prestamos(Nullable<int> iD, Nullable<int> cuenta, Nullable<int> cuota)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var cuentaParameter = cuenta.HasValue ?
                new ObjectParameter("Cuenta", cuenta) :
                new ObjectParameter("Cuenta", typeof(int));
    
            var cuotaParameter = cuota.HasValue ?
                new ObjectParameter("Cuota", cuota) :
                new ObjectParameter("Cuota", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PAGOS_Prestamos", iDParameter, cuentaParameter, cuotaParameter);
        }
    
        public virtual int TRANSACCIONES(Nullable<int> cuenta_pago, Nullable<int> cuenta_deposito, Nullable<int> mONTO)
        {
            var cuenta_pagoParameter = cuenta_pago.HasValue ?
                new ObjectParameter("Cuenta_pago", cuenta_pago) :
                new ObjectParameter("Cuenta_pago", typeof(int));
    
            var cuenta_depositoParameter = cuenta_deposito.HasValue ?
                new ObjectParameter("Cuenta_deposito", cuenta_deposito) :
                new ObjectParameter("Cuenta_deposito", typeof(int));
    
            var mONTOParameter = mONTO.HasValue ?
                new ObjectParameter("MONTO", mONTO) :
                new ObjectParameter("MONTO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TRANSACCIONES", cuenta_pagoParameter, cuenta_depositoParameter, mONTOParameter);
        }
    
        public virtual int TRANSACCIONES_TARJETAS(Nullable<int> numeroTarjeta, Nullable<int> cuenta_deposito, Nullable<int> mONTO)
        {
            var numeroTarjetaParameter = numeroTarjeta.HasValue ?
                new ObjectParameter("NumeroTarjeta", numeroTarjeta) :
                new ObjectParameter("NumeroTarjeta", typeof(int));
    
            var cuenta_depositoParameter = cuenta_deposito.HasValue ?
                new ObjectParameter("Cuenta_deposito", cuenta_deposito) :
                new ObjectParameter("Cuenta_deposito", typeof(int));
    
            var mONTOParameter = mONTO.HasValue ?
                new ObjectParameter("MONTO", mONTO) :
                new ObjectParameter("MONTO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TRANSACCIONES_TARJETAS", numeroTarjetaParameter, cuenta_depositoParameter, mONTOParameter);
        }
    
        public virtual ObjectResult<Reporte_TRANSACCIONES_FECHA_Result> Reporte_TRANSACCIONES_FECHA(Nullable<System.DateTime> fECHA_INICIO, Nullable<System.DateTime> fECHA_FIN)
        {
            var fECHA_INICIOParameter = fECHA_INICIO.HasValue ?
                new ObjectParameter("FECHA_INICIO", fECHA_INICIO) :
                new ObjectParameter("FECHA_INICIO", typeof(System.DateTime));
    
            var fECHA_FINParameter = fECHA_FIN.HasValue ?
                new ObjectParameter("FECHA_FIN", fECHA_FIN) :
                new ObjectParameter("FECHA_FIN", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Reporte_TRANSACCIONES_FECHA_Result>("Reporte_TRANSACCIONES_FECHA", fECHA_INICIOParameter, fECHA_FINParameter);
        }
    
        public virtual int RETIRO_EFECTIVO(Nullable<int> cuenta_id, Nullable<int> monto)
        {
            var cuenta_idParameter = cuenta_id.HasValue ?
                new ObjectParameter("Cuenta_id", cuenta_id) :
                new ObjectParameter("Cuenta_id", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RETIRO_EFECTIVO", cuenta_idParameter, montoParameter);
        }
    }
}
